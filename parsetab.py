
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND EQUIVALENT FALSE IMPLIES LPAREN NAND NOR NOT OR RPAREN TRUE XORexp : exp IMPLIES exp1\n  | exp EQUIVALENT exp1\n  | exp1 exp1 : exp1 OR exp2\n  | exp1 NOR exp2\n  | exp2 exp2 : exp2 XOR exp3\n  | exp3 exp3 : exp3 AND exp4\n  | exp3 NAND exp4 \n  | exp4 exp4 : NOT exp4\n  | exp5 exp5 : LPAREN exp RPAREN\n  | TRUE\n  | FALSE '
    
_lr_action_items = {'NOT':([0,6,8,11,12,13,14,15,16,17,],[6,6,6,6,6,6,6,6,6,6,]),'LPAREN':([0,6,8,11,12,13,14,15,16,17,],[8,8,8,8,8,8,8,8,8,8,]),'TRUE':([0,6,8,11,12,13,14,15,16,17,],[9,9,9,9,9,9,9,9,9,9,]),'FALSE':([0,6,8,11,12,13,14,15,16,17,],[10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,3,4,5,7,9,10,18,20,21,22,23,24,25,26,27,],[0,-3,-6,-8,-11,-13,-15,-16,-12,-1,-2,-4,-5,-7,-9,-10,-14,]),'IMPLIES':([1,2,3,4,5,7,9,10,18,19,20,21,22,23,24,25,26,27,],[11,-3,-6,-8,-11,-13,-15,-16,-12,11,-1,-2,-4,-5,-7,-9,-10,-14,]),'EQUIVALENT':([1,2,3,4,5,7,9,10,18,19,20,21,22,23,24,25,26,27,],[12,-3,-6,-8,-11,-13,-15,-16,-12,12,-1,-2,-4,-5,-7,-9,-10,-14,]),'RPAREN':([2,3,4,5,7,9,10,18,19,20,21,22,23,24,25,26,27,],[-3,-6,-8,-11,-13,-15,-16,-12,27,-1,-2,-4,-5,-7,-9,-10,-14,]),'OR':([2,3,4,5,7,9,10,18,20,21,22,23,24,25,26,27,],[13,-6,-8,-11,-13,-15,-16,-12,13,13,-4,-5,-7,-9,-10,-14,]),'NOR':([2,3,4,5,7,9,10,18,20,21,22,23,24,25,26,27,],[14,-6,-8,-11,-13,-15,-16,-12,14,14,-4,-5,-7,-9,-10,-14,]),'XOR':([3,4,5,7,9,10,18,22,23,24,25,26,27,],[15,-8,-11,-13,-15,-16,-12,15,15,-7,-9,-10,-14,]),'AND':([4,5,7,9,10,18,24,25,26,27,],[16,-11,-13,-15,-16,-12,16,-9,-10,-14,]),'NAND':([4,5,7,9,10,18,24,25,26,27,],[17,-11,-13,-15,-16,-12,17,-9,-10,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,8,],[1,19,]),'exp1':([0,8,11,12,],[2,2,20,21,]),'exp2':([0,8,11,12,13,14,],[3,3,3,3,22,23,]),'exp3':([0,8,11,12,13,14,15,],[4,4,4,4,4,4,24,]),'exp4':([0,6,8,11,12,13,14,15,16,17,],[5,18,5,5,5,5,5,5,25,26,]),'exp5':([0,6,8,11,12,13,14,15,16,17,],[7,7,7,7,7,7,7,7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> exp IMPLIES exp1','exp',3,'p_exp','parser.py',6),
  ('exp -> exp EQUIVALENT exp1','exp',3,'p_exp','parser.py',7),
  ('exp -> exp1','exp',1,'p_exp','parser.py',8),
  ('exp1 -> exp1 OR exp2','exp1',3,'p_exp1','parser.py',11),
  ('exp1 -> exp1 NOR exp2','exp1',3,'p_exp1','parser.py',12),
  ('exp1 -> exp2','exp1',1,'p_exp1','parser.py',13),
  ('exp2 -> exp2 XOR exp3','exp2',3,'p_exp2','parser.py',16),
  ('exp2 -> exp3','exp2',1,'p_exp2','parser.py',17),
  ('exp3 -> exp3 AND exp4','exp3',3,'p_exp3','parser.py',20),
  ('exp3 -> exp3 NAND exp4','exp3',3,'p_exp3','parser.py',21),
  ('exp3 -> exp4','exp3',1,'p_exp3','parser.py',22),
  ('exp4 -> NOT exp4','exp4',2,'p_exp4','parser.py',25),
  ('exp4 -> exp5','exp4',1,'p_exp4','parser.py',26),
  ('exp5 -> LPAREN exp RPAREN','exp5',3,'p_exp5','parser.py',29),
  ('exp5 -> TRUE','exp5',1,'p_exp5','parser.py',30),
  ('exp5 -> FALSE','exp5',1,'p_exp5','parser.py',31),
]
